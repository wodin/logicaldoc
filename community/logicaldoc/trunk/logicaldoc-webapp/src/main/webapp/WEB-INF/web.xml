<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<description>LogicalDOC - Document Management System</description>
	<display-name>LogicalDOC</display-name>
	<!--
		Location of the XML file that defines the root application context
		Applied by ContextLoaderListener.
	-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/classes/context.xml</param-value>
	</context-param>


	<context-param>
		<!-- max size of the upload request -->
		<param-name>maxSize</param-name>
		<param-value>3145728</param-value>
	</context-param>
	<context-param>
		<!--
			Useful in development mode to slow down the uploads in fast networks.
			Put the number of milliseconds to sleep in each block received in the
			server. false or 0, means don't use slow uploads
		-->
		<param-name>slowUploads</param-name>
		<param-value>10</param-value>
	</context-param>

	<filter>
		<filter-name>Charset Filter</filter-name>
		<filter-class>com.logicaldoc.web.CharsetFilter</filter-class>
		<init-param>
			<param-name>requestEncoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<!-- mappings -->
	<filter-mapping>
		<filter-name>Charset Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- Application initializer -->
	<listener>
		<listener-class>com.logicaldoc.web.ApplicationInitializer</listener-class>
	</listener>
	<!--
		Loads the root application context of this web app at startup. Use
		WebApplicationContextUtils.getWebApplicationContext(servletContext) to
		access it anywhere in the web application, outside of the framework.

		The root context is the parent of all servlet-specific contexts. This
		means that its beans are automatically available in these child
		contexts, both for getBean(name) calls and (external) bean references.
	-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<servlet>
		<servlet-name>UploadServlet</servlet-name>
		<!-- This is the default servlet, it puts files in session -->
		<servlet-class>com.logicaldoc.gui.common.server.mock.MockUploadServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>SecurityService</servlet-name>
		<servlet-class>com.logicaldoc.web.security.SecurityServiceImpl</servlet-class>
	</servlet>
  
    <servlet>
        <servlet-name>SystemService</servlet-name>
        <servlet-class>com.logicaldoc.gui.frontend.mock.MockSystemServiceImpl</servlet-class>
    </servlet>
    
    <servlet>
        <servlet-name>SearchEngineService</servlet-name>
        <servlet-class>com.logicaldoc.gui.frontend.mock.MockSearchEngineServiceImpl</servlet-class>
    </servlet>

	<servlet>
		<servlet-name>DocumentService</servlet-name>
		<servlet-class>
			com.logicaldoc.gui.frontend.mock.MockDocumentServiceImpl</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>FolderService</servlet-name>
		<servlet-class>com.logicaldoc.gui.frontend.mock.MockFolderServiceImpl</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>SearchService</servlet-name>
		<servlet-class>com.logicaldoc.gui.frontend.mock.MockSearchServiceImpl</servlet-class>
	</servlet>
  
    <servlet>
        <servlet-name>SettingService</servlet-name>
        <servlet-class>com.logicaldoc.gui.frontend.mock.MockSettingServiceImpl</servlet-class>
    </servlet>

	<servlet>
		<servlet-name>SetupService</servlet-name>
		<servlet-class>com.logicaldoc.web.setup.SetupServiceImpl</servlet-class>
	</servlet>
  
    <servlet>
        <servlet-name>TemplateService</servlet-name>
        <servlet-class>com.logicaldoc.gui.frontend.mock.MockTemplateServiceImpl</servlet-class>
    </servlet>

	<servlet>
		<servlet-name>TagsData</servlet-name>
		<servlet-class>com.logicaldoc.gui.common.server.mock.MockTagsDataServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>GroupsData</servlet-name>
		<servlet-class>com.logicaldoc.gui.common.server.mock.MockGroupsDataServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>UsersData</servlet-name>
		<servlet-class>com.logicaldoc.gui.common.server.mock.MockUsersDataServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>FoldersData</servlet-name>
		<servlet-class>
			com.logicaldoc.gui.common.server.mock.MockFoldersDataServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>DocumentsData</servlet-name>
		<servlet-class>
			com.logicaldoc.gui.common.server.mock.MockDocumentsDataServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>LinksData</servlet-name>
		<servlet-class>com.logicaldoc.gui.common.server.mock.MockLinksDataServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>DiscussionsData</servlet-name>
		<servlet-class>
			com.logicaldoc.gui.common.server.mock.MockDiscussionsDataServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>PostsData</servlet-name>
		<servlet-class>com.logicaldoc.gui.common.server.mock.MockPostsDataServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>VersionsData</servlet-name>
		<servlet-class>
			com.logicaldoc.gui.common.server.mock.MockVersionsDataServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>DocumentHistoryData</servlet-name>
		<servlet-class>
			com.logicaldoc.gui.frontend.mock.MockDocumentHistoryDataServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>FolderHistoryData</servlet-name>
		<servlet-class>
			com.logicaldoc.gui.common.server.mock.MockFolderHistoryDataServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>LanguagesData</servlet-name>
		<servlet-class>
			com.logicaldoc.gui.frontend.mock.MockLanguagesDataServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>TemplatesData</servlet-name>
		<servlet-class>
			com.logicaldoc.gui.common.server.mock.MockTemplatesDataServlet</servlet-class>
	</servlet>
  
    <servlet>
        <servlet-name>SavedSearchesData</servlet-name>
        <servlet-class>com.logicaldoc.gui.common.server.mock.MockSavedSearchesDataServlet</servlet-class>
    </servlet>

	<servlet>
		<servlet-name>Thumbnail</servlet-name>
		<servlet-class>com.logicaldoc.gui.common.server.mock.MockThumbnailServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>Download</servlet-name>
		<servlet-class>com.logicaldoc.gui.frontend.mock.MockDownloadServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>RightsData</servlet-name>
		<servlet-class>com.logicaldoc.gui.common.server.mock.MockRightsDataServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>MockServlet</servlet-name>
		<servlet-class>com.logicaldoc.gui.common.server.mock.MockServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>UploadServlet</servlet-name>
		<url-pattern>*.gupld</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>SecurityService</servlet-name>
		<url-pattern>/frontend/security</url-pattern>
	</servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>SettingService</servlet-name>
        <url-pattern>/frontend/setting</url-pattern>
    </servlet-mapping>
  
   <servlet-mapping>
        <servlet-name>SystemService</servlet-name>
        <url-pattern>/frontend/system</url-pattern>
   </servlet-mapping>

   <servlet-mapping>
        <servlet-name>SearchEngineService</servlet-name>
        <url-pattern>/frontend/searchengine</url-pattern>
   </servlet-mapping>

	<servlet-mapping>
		<servlet-name>DocumentService</servlet-name>
		<url-pattern>/frontend/document</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>SetupService</servlet-name>
		<url-pattern>/setup/setup</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>FolderService</servlet-name>
		<url-pattern>/frontend/folder</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>SearchService</servlet-name>
		<url-pattern>/frontend/search</url-pattern>
	</servlet-mapping>
  
    <servlet-mapping>
        <servlet-name>TemplateService</servlet-name>
        <url-pattern>/frontend/template</url-pattern>
    </servlet-mapping>

	<servlet-mapping>
		<servlet-name>TagsData</servlet-name>
		<url-pattern>/data/tags.xml</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>GroupsData</servlet-name>
		<url-pattern>/data/groups.xml</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>UsersData</servlet-name>
		<url-pattern>/data/users.xml</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>FoldersData</servlet-name>
		<url-pattern>/data/folders.xml</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>DocumentsData</servlet-name>
		<url-pattern>/data/documents.xml</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>LinksData</servlet-name>
		<url-pattern>/data/links.xml</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>DiscussionsData</servlet-name>
		<url-pattern>/data/discussions.xml</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>PostsData</servlet-name>
		<url-pattern>/data/posts.xml</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>VersionsData</servlet-name>
		<url-pattern>/data/versions.xml</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>DocumentHistoryData</servlet-name>
		<url-pattern>/data/documenthistory.xml</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>FolderHistoryData</servlet-name>
		<url-pattern>/data/folderhistory.xml</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>LanguagesData</servlet-name>
		<url-pattern>/data/languages.xml</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>TemplatesData</servlet-name>
		<url-pattern>/data/templates.xml</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>RightsData</servlet-name>
		<url-pattern>/data/rights.xml</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>Thumbnail</servlet-name>
		<url-pattern>/thumbnail</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>Download</servlet-name>
		<url-pattern>/download</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>MockServlet</servlet-name>
		<url-pattern>/convertpdf</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>MockServlet</servlet-name>
		<url-pattern>/doc_rss</url-pattern>
	</servlet-mapping>


	<!-- Welcome files -->
	<welcome-file-list>
		<welcome-file>frontend.jsp</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

	<!-- Human readable errors -->
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/error.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/error.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/error.jsp</location>
	</error-page>
	<jsp-config>
		<jsp-property-group>
			<url-pattern>*.jsp</url-pattern>
			<el-ignored>false</el-ignored>
		</jsp-property-group>
		<jsp-property-group>
			<url-pattern>*.jspx</url-pattern>
			<el-ignored>false</el-ignored>
		</jsp-property-group>
		<jsp-property-group>
			<url-pattern>*.xhtml</url-pattern>
			<el-ignored>false</el-ignored>
		</jsp-property-group>
	</jsp-config>
	<security-constraint>
		<display-name>Setup only allowed after authentication</display-name>
		<web-resource-collection>
			<web-resource-name>Setup</web-resource-name>
			<url-pattern>/setup.jsp</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<role-name>admin</role-name>
		</auth-constraint>
	</security-constraint>
	<security-constraint>
		<display-name>Sessions management only allowed after
			authentication</display-name>
		<web-resource-collection>
			<web-resource-name>Sessions</web-resource-name>
			<url-pattern>/sessions.jsp</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<role-name>admin</role-name>
		</auth-constraint>
	</security-constraint>
	<login-config>
		<auth-method>BASIC</auth-method>
		<realm-name>SETUP Login</realm-name>
	</login-config>
	<security-role>
		<role-name>admin</role-name>
	</security-role>
</web-app>
