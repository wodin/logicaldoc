<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans SYSTEM "spring-beans-2.0.dtd">
<beans default-lazy-init="false" default-autowire="no"
	default-dependency-check="none">
	<import resource="classpath*:context-*.xml" />

	<!-- This post processor ensures placeholders substitutions -->
	<bean id="PropertyPlaceholderConfigurer" class="com.logicaldoc.util.spring.PropertiesPlaceHolder"
		lazy-init="false" abstract="false" autowire="default"
		dependency-check="default">
		<property name="locations">
			<list>
				<value>classpath*:context.properties</value>
			</list>
		</property>
	</bean>

	<bean id="ContextProperties" class="com.logicaldoc.util.config.PropertiesBean" />

	<bean id="Context" class="com.logicaldoc.util.Context" abstract="false"
		lazy-init="default" autowire="default" dependency-check="default" />

	<!-- Paths of the current skin -->
	<bean id="StyleBean" class="com.logicaldoc.web.StyleBean"
		lazy-init="false" />

	<!-- DataSource -->
	<bean id="DataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName">
			<value>${jdbc.driver}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="initialSize" value="3" />
		<property name="validationQuery">
			<value>${jdbc.validationQuery}</value>
		</property>
	</bean>

	<!-- Hibernate SessionFactory -->
	<bean id="SessionFactory" class="com.logicaldoc.util.spring.LogicalDOCSessionFactoryBean"
		abstract="false" lazy-init="default" autowire="default"
		dependency-check="default">
		<property name="dataSource">
			<ref bean="DataSource" />
		</property>

		<property name="mappingLocations">
			<list>
				<value>classpath*:mappings/*.hbm.xml</value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.cache.use_second_level_cache">
					true
				</prop>
				<prop key="hibernate.cache.provider_class">
					org.hibernate.cache.EhCacheProvider
				</prop>
			</props>
		</property>
	</bean>


	<!--Transaction management-->
	<bean id="TransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		abstract="false" lazy-init="default" autowire="default"
		dependency-check="default">
		<property name="sessionFactory">
			<ref bean="SessionFactory" />
		</property>
	</bean>

	<!--Transactional proxy-->
	<bean id="ApplicationBaseTransactionProxy"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		lazy-init="true" abstract="false" autowire="default" dependency-check="default">
		<property name="transactionManager">
			<ref bean="TransactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="GarbageCollector"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" >
		 <bean class="com.logicaldoc.web.GarbageCollector" />  
		</property>
		<property name="targetMethod">
			<value>gc</value>
		</property>
		<property name="concurrent">
			<value>false</value>
		</property>
	</bean>

	<bean id="GarbageCollectorTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="GarbageCollector" />
		<property name="startDelay" value="5000" />
		<property name="repeatInterval" value="1000" />
	</bean>

	<!-- Scheduler -->
	<bean id="Scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
			    <ref bean="GarbageCollectorTrigger" />
				<ref bean="IndexOptimizerTrigger" />
				<ref bean="TagCloudGeneratorTrigger" />
				<ref bean="IndexerTaskTrigger" />
			</list>
		</property>
	</bean>

	<bean id="AuthenticationChain"
		class="com.logicaldoc.core.security.authentication.AuthenticationChain" />
</beans>
